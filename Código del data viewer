"""
Created on Sat Nov 21 00:41:41 2020

@author: Diego Amado, Sebastian Manjarres, Luis Velasquez.
"""

import matplotlib.pyplot as plt
import plotly.graph_objects as go
import plotly.express as px
from mpl_toolkits.mplot3d import Axes3D
import matplotlib.cm as cm
import pandas as pd
import numpy as np
from scipy.optimize import curve_fit
import datetime 
from sodapy import Socrata
import pi
import folium 
import math  
import requests
from folium.plugins import HeatMap, MarkerCluster
from folium import Choropleth, Circle, Marker
from dash.dependencies import Input, Output, State
import dash
import dash_core_components as dcc
import dash_html_components as html
from matplotlib import colors
from scipy.optimize import curve_fit
import plotly.io as pio
client = Socrata("www.datos.gov.co","S7PcPaCGni4kPjVlznj8gAI2Y",
                  username="johan.manjarres@correo.usa.edu.co",
                  password="Pacho2017")

limite=100000
results = client.get("gt2j-8ykr", limit=limite)
df_result = pd.DataFrame.from_records(results)

df_result['casos'] = 1

df_result['lat']=df_result['departamento_nom']
df_result['lat'].replace({'BOGOTA':4.6097102,'VALLE':3.5833299,'ANTIOQUIA':6.1759100,
                      'CARTAGENA':10.3997202,'HUILA':1.8537101,'META':3.9869499,
                      'ATLANTICO':10.8595304,'BARRANQUILLA':10.9685402,'RISARALDA':4.8391600,
                      'NORTE SANTANDER':8.2377300,'CALDAS':5.4478302,'CUNDINAMARCA': 4.7163801,
                      'AMAZONAS':-4.2081000,'NARIÑO':0.8301800,'STA MARTA D.E.':11.2407904,
                      'TOLIMA':4.1492400,'MAGDALENA':11.0070295,'CESAR':8.8170000,
                      'QUINDIO':4.5294900,'BOYACA':5.5352803,'SANTANDER':7.1253901,
                      'BUENAVENTURA':3.5394399,'CAUCA':2.4382300,'BOLIVAR':9.2420197,
                      'CORDOBA':8.7479801,'CHOCO':5.6918802,'CASANARE':5.3377500,
                      'GUAJIRA':11.5444403,'CAQUETA':1.6143800,'ARAUCA':7.0847100,
                      'SAN ANDRES':12.5847197,'SUCRE':9.3047199,'PUTUMAYO':1.1493300,'VAUPES':0.9723900,'GUAVIARE':2.567,
                      'GUAINIA':3.867,'VICHADA':4.433},inplace=True)

df_result['lon']=df_result['departamento_nom']
df_result['lon'].replace({'BOGOTA':-74.0817490,'VALLE':-77.0000000,'ANTIOQUIA':-75.5917435,
                      'CARTAGENA':-75.5144424,'HUILA':-76.0507126,'META':-73.7579727,
                      'ATLANTICO':-74.7738571,'BARRANQUILLA':-74.7813187,'RISARALDA':-75.6672668,
                      'NORTE SANTANDER':-73.3560410,'CALDAS':-74.6631088,'CUNDINAMARCA': -74.2119522,
                      'AMAZONAS':-69.9432000,'NARIÑO':-77.6495895,'STA MARTA D.E.':-74.1990433,
                      'TOLIMA':-74.8842926,'MAGDALENA':-74.2476501,'CESAR':-74.7170000,
                      'QUINDIO':-75.6409073,'BOYACA':-73.3677826,'SANTANDER':-73.1197968,
                      'BUENAVENTURA':-76.3036118,'CAUCA':-76.6131592,'BOLIVAR':-74.7546692,
                      'CORDOBA':-75.8814316,'CHOCO':-76.6583481,'CASANARE':-72.3958588,
                      'GUAJIRA':-72.9072189,'CAQUETA':-75.6062317,'ARAUCA':-70.7590800,
                      'SAN ANDRES':-81.7005615,'SUCRE':-75.3977814,'PUTUMAYO':-76.6466100,'VAUPES':-70.4063500,'GUAVIARE':-72.633,
                      'GUAINIA':-67.917,'VICHADA':-69.8},inplace=True)

casos_bogota=df_result.query('departamento_nom=="BOGOTA"')
b = casos_bogota.shape[0]
casos_cauca=df_result.query('departamento_nom=="VALLE"')
v = casos_cauca.shape[0]
casos_Meta=df_result.query('departamento_nom=="META"')
m = casos_cauca.shape[0]
casos_antioquia=df_result.query('departamento_nom=="ANTIOQUIA"')
a = casos_antioquia.shape[0]
casos_cartagena=df_result.query('departamento_nom=="CARTAGENA"')
c = casos_cartagena.shape[0]
casos_atlantico=df_result.query('departamento_nom=="ATALNTICO"')
a1 = casos_atlantico.shape[0]
casos_barranquilla=df_result.query('departamento_nom=="BARRANQUILLA"')
b1 = casos_barranquilla.shape[0]
casos_cundinamarca=df_result.query('departamento_nom=="CUNDINAMARCA"')
c1 = casos_cundinamarca.shape[0]
casos_amazonas=df_result.query('departamento_nom=="AMAZONAS"')
a2 = casos_amazonas.shape[0]
casos_risaralda=df_result.query('departamento_nom=="RISARALDA"')
r = casos_risaralda.shape[0]
casos_narino=df_result.query('departamento_nom=="NARIÑO"')
n = casos_narino.shape[0]
casos_santa_marta=df_result.query('departamento_nom=="STA MARTA D.E."')
s = casos_santa_marta.shape[0]
casos_huila=df_result.query('departamento_nom=="HUILA"')
h = casos_huila.shape[0]
casos_tolima=df_result.query('departamento_nom=="TOLIMA"')
t = casos_tolima.shape[0]
casos_huila=df_result.query('departamento_nom=="NORTE SANTANDER"')
n1 = casos_huila.shape[0]
casos_caldas=df_result.query('departamento_nom=="CALDAS"')
c2 = casos_caldas.shape[0]
casos_magdalena=df_result.query('departamento_nom=="MAGDALENA"')
m1 = casos_magdalena.shape[0]
casos_cesar=df_result.query('departamento_nom=="CESAR"')
c3 = casos_cesar.shape[0]
casos_quindio=df_result.query('departamento_nom=="QUINDIO"')
q = casos_quindio.shape[0]
casos_boyaca=df_result.query('departamento_nom=="BOYACA"')
b2 = casos_boyaca.shape[0]
casos_santander=df_result.query('departamento_nom=="SANTANDER"')
s1 = casos_santander.shape[0]
casos_buenaventura=df_result.query('departamento_nom=="BUENAVENTURA"')
b3 = casos_buenaventura.shape[0]
casos_cauca=df_result.query('departamento_nom=="CAUCA"')
c4 = casos_cauca.shape[0]
casos_bolivar=df_result.query('departamento_nom=="BOLIVAR"')
b4 = casos_bolivar.shape[0]
casos_cordoba=df_result.query('departamento_nom=="CORDOBA"')
c5 = casos_cordoba.shape[0]
casos_choco=df_result.query('departamento_nom=="CHOCO"')
c6 = casos_choco.shape[0]
casos_casanare=df_result.query('departamento_nom=="CASANARE"')
c7 = casos_casanare.shape[0]
casos_guajira=df_result.query('departamento_nom=="GAUJIRA"')
g = casos_guajira.shape[0]
casos_caqueta=df_result.query('departamento_nom=="CAQUETA"')
c8 = casos_caqueta.shape[0]
casos_caqueta=df_result.query('departamento_nom=="SAN ANDRES"')
sp = casos_caqueta.shape[0]
casos_sucre=df_result.query('departamento_nom=="SUCRE"')
s2 = casos_sucre.shape[0]
casos_arauca=df_result.query('departamento_nom=="ARAUCA"')
a3 = casos_arauca.shape[0]
casos_putumayo=df_result.query('departamento_nom=="PUTUMAYO"')
put = casos_putumayo.shape[0]
casos_Vaupés=df_result.query('departamento_nom=="VAUPES"')
vap = casos_Vaupés.shape[0]
casos_Gauviare=df_result.query('departamento_nom=="GUAVIARE"')
guav = casos_Gauviare.shape[0]
casos_Guainia=df_result.query('departamento_nom=="GUAINIA"')
guai = casos_Guainia.shape[0]
casos_Vichada=df_result.query('departamento_nom=="VICHADA"')
vich = casos_Vichada.shape[0]

df_result['casos_totales'] = df_result['departamento_nom']
df_result['casos_totales'].replace({'BOGOTA':b,'VALLE':v,'META':m,'ANTIOQUIA':a,'CARTAGENA':c,
                                   'ATLANTICO':a1,'BARRANQUILLA':b1,'CUNDINAMARCA':c1,'AMAZONAS':a2,'RISARALDA':r,
                                   'NARIÑO':n,'STA MARTA D.E.':s,'HUILA':h,'TOLIMA':t,'NORTE SANTANDER':n1,
                                   'CALDAS':c2,'MAGDALENA':m1,'CESAR':c3,'QUINDIO':q,'BOYACA':b2,'SANTANDER':s1,
                                   'BUENAVENTURA':b3,'CAUCA':c4,'BOLIVAR':b4,'CORDOBA':c5,'CHOCO':c6,'CASANARE':c7,
                                   'GUAJIRA':g,'CAQUETA':c8,'SAN ANDRES':sp,'SUCRE':s2,'ARAUCA':a3,'PUTUMAYO':put,
                                   'VAUPES':vap,'GUAVIARE':guav,'GUAINIA':guai,'VICHADA':vich},inplace=True)

df_result['fecha_de_notificaci_n']=df_result['fecha_de_notificaci_n'].map(lambda x:str(x)[:-8])
df_result['fecha_diagnostico']=df_result['fecha_diagnostico'].map(lambda x:str(x)[:-8])
df_result['fecha_recuperado']=df_result['fecha_recuperado'].map(lambda x:str(x)[:-8])
df_result['fecha_reporte_web']=df_result['fecha_reporte_web'].map(lambda x:str(x)[:-8])
df_result['fecha_muerte']=df_result['fecha_muerte'].dropna(how='any').map(lambda x:str(x)[:-8])

df_result.to_excel("data.xlsx",sheet_name="datos")

df=pd.read_excel('data.xlsx') 

anim=df.groupby(['departamento','fecha_diagnostico']).count()
b=anim.iloc[:,0]

depart=["BOGOTA","VALLE","META","ANTIOQUIA","CARTGENA","ATLANTICO","BARRANQUILLA",
        "CUNDINAMARCA","AMAZONAS","RISARALDA","NARIÑO","STA MARTA D.E.","HUILA","TOLIMA","NORTE SANTANDER",
        "CALDAS","MAGDALENA","CESAR","QUINDIO","BOYACA","SANTANDER","BUENAVENTURA","CAUCA","BOLIVAR","CORDOBA",
        "CHOCO","CASANARE","GUAJIRA","CAQUETA","SAN ANDRES","SUCRE","ARAUCA","PUTUMAYO","VAUPES","GUAVIARE","GUAINIA","VICHADA"]
depart.sort(key = str.lower)
cco=np.arange(0,len(depart),1)

lendep=[]
lendep.insert(0,len(df.query('departamento_nom==@depart[0]').groupby('fecha_diagnostico').count()))
lendep.insert(1,len(df.query('departamento_nom==@depart[1]').groupby('fecha_diagnostico').count()))
lendep.insert(2,len(df.query('departamento_nom==@depart[2]').groupby('fecha_diagnostico').count()))
lendep.insert(3,len(df.query('departamento_nom==@depart[3]').groupby('fecha_diagnostico').count()))
lendep.insert(4,len(df.query('departamento_nom==@depart[4]').groupby('fecha_diagnostico').count()))
lendep.insert(5,len(df.query('departamento_nom==@depart[5]').groupby('fecha_diagnostico').count()))
lendep.insert(6,len(df.query('departamento_nom==@depart[6]').groupby('fecha_diagnostico').count()))
lendep.insert(7,len(df.query('departamento_nom==@depart[7]').groupby('fecha_diagnostico').count()))
lendep.insert(8,len(df.query('departamento_nom==@depart[8]').groupby('fecha_diagnostico').count()))
lendep.insert(9,len(df.query('departamento_nom==@depart[9]').groupby('fecha_diagnostico').count()))
lendep.insert(10,len(df.query('departamento_nom==@depart[10]').groupby('fecha_diagnostico').count()))
lendep.insert(11,len(df.query('departamento_nom==@depart[11]').groupby('fecha_diagnostico').count()))
lendep.insert(12,len(df.query('departamento_nom==@depart[12]').groupby('fecha_diagnostico').count()))
lendep.insert(13,len(df.query('departamento_nom==@depart[13]').groupby('fecha_diagnostico').count()))
lendep.insert(14,len(df.query('departamento_nom==@depart[14]').groupby('fecha_diagnostico').count()))
lendep.insert(15,len(df.query('departamento_nom==@depart[15]').groupby('fecha_diagnostico').count()))
lendep.insert(16,len(df.query('departamento_nom==@depart[16]').groupby('fecha_diagnostico').count()))
lendep.insert(17,len(df.query('departamento_nom==@depart[17]').groupby('fecha_diagnostico').count()))
lendep.insert(18,len(df.query('departamento_nom==@depart[18]').groupby('fecha_diagnostico').count()))
lendep.insert(19,len(df.query('departamento_nom==@depart[19]').groupby('fecha_diagnostico').count()))
lendep.insert(20,len(df.query('departamento_nom==@depart[20]').groupby('fecha_diagnostico').count()))
lendep.insert(21,len(df.query('departamento_nom==@depart[21]').groupby('fecha_diagnostico').count()))
lendep.insert(22,len(df.query('departamento_nom==@depart[22]').groupby('fecha_diagnostico').count()))
lendep.insert(23,len(df.query('departamento_nom==@depart[23]').groupby('fecha_diagnostico').count()))
lendep.insert(24,len(df.query('departamento_nom==@depart[24]').groupby('fecha_diagnostico').count()))
lendep.insert(25,len(df.query('departamento_nom==@depart[25]').groupby('fecha_diagnostico').count()))
lendep.insert(26,len(df.query('departamento_nom==@depart[26]').groupby('fecha_diagnostico').count()))
lendep.insert(27,len(df.query('departamento_nom==@depart[27]').groupby('fecha_diagnostico').count()))
lendep.insert(28,len(df.query('departamento_nom==@depart[28]').groupby('fecha_diagnostico').count()))
lendep.insert(29,len(df.query('departamento_nom==@depart[29]').groupby('fecha_diagnostico').count()))
lendep.insert(30,len(df.query('departamento_nom==@depart[30]').groupby('fecha_diagnostico').count()))
lendep.insert(31,len(df.query('departamento_nom==@depart[31]').groupby('fecha_diagnostico').count()))
lendep.insert(32,len(df.query('departamento_nom==@depart[32]').groupby('fecha_diagnostico').count()))
lendep.insert(33,len(df.query('departamento_nom==@depart[33]').groupby('fecha_diagnostico').count()))
lendep.insert(34,len(df.query('departamento_nom==@depart[34]').groupby('fecha_diagnostico').count()))
lendep.insert(35,len(df.query('departamento_nom==@depart[35]').groupby('fecha_diagnostico').count()))
lendep.insert(36,len(df.query('departamento_nom==@depart[36]').groupby('fecha_diagnostico').count()))

casos=df.iloc[:,1]

casost=df_result.groupby('departamento_nom').count()
casostot=casost.iloc[:,0]

diag=df.groupby('fecha_diagnostico').count()
casos_d=diag.iloc[:,1]
diagnostico=df.iloc[:,18].dropna(how='any').unique().tolist()
diagnostico.sort()
x=np.arange(1,len(casos_d),1)
cd=np.arange(0,len(casos_d),1)
d=0
con_tot=[]
for i in cd:
    d=d+casos_d[i]
    con_tot.insert(i,d)
    
rec=df.groupby('fecha_recuperado').count()
casos_r=rec.iloc[:,1]
recuperado=df.iloc[:,19].dropna(how='any').unique().tolist()
recuperado.sort()
cr=np.arange(0,len(casos_r),1)
r=0
rec_tot=[]
for i in cr:
    r=r+casos_r[i]
    rec_tot.insert(i,r)

dead=df.groupby('fecha_muerte').count()
casos_m=dead.iloc[:,1]
muerto=df.iloc[:,23].dropna(how='any').unique().tolist()
muerto.sort() 
cm=np.arange(0,len(casos_m),1)
m=0
dead_tot=[]
for i in cm:
    m=m+casos_m[i]
    dead_tot.insert(i,m)
     
diag['contagios totales']=con_tot

anastasio=np.arange(0,(len(b)),1)

fechasan=[]
an_tot=[]
deparn=[]
anit=0
j=0
corte=0
for i in anastasio: 
    newde=depart[corte]
    newfe=diagnostico[corte]
    anit=anit+b[i]
    an_tot.insert(i,anit)
    deparn.insert(i,newde)
    fechasan.insert(i,newfe)
    j+=1
    
    if j==lendep[corte]:
        anit=0
        corte+=1
        j=0
        if corte>34:
            corte=0
        
newfe=anim.index.values


contag=np.array(con_tot)
contagios=contag[-1]
recup = np.array(rec_tot)
recupera2 = recup[-1]
deadpaila=np.array(dead_tot)
muer2=deadpaila[-1]


fig_1 = go.Figure(go.Indicator(
    mode = "gauge+number",
    value = contagios,
    title = {'text': "Contagios"},
    domain = {'x': [0, 1], 'y': [0, 1]}
))
fig_1.show()

fig_2 = go.Figure(go.Indicator(
    mode = "gauge+number",
    value = recupera2,
    title = {'text': "Recuperados"},
    domain = {'x': [0, 1], 'y': [0, 1]}
))
fig_2.show()

fig_3 = go.Figure(go.Indicator(
    mode = "gauge+number",
    value = muer2,
    title = {'text': "Fallecidos"},
    domain = {'x': [0, 1], 'y': [0, 1]}
))
fig_3.show()

fig_4=go.Figure(data=[go.Bar(x=depart, y=casostot)],layout_title_text='Contagios Por Cuidad')
fig_4.show()

fig_5=px.pie(df_result,values='casos', names='sexo', title='Casos Registrados Sexo')
fig_5.show()

fig_6=px.pie(df_result,values='casos', names='estado', title='Estado de los Contagiados')
fig_6.show()

fig_7=go.Figure()
fig_7.add_trace(go.Scatter(y=con_tot,x=diagnostico,mode='lines',name='Contagios Totales Por Dia'))
fig_7.show()

fig_8=go.Figure()
fig_8.add_trace(go.Scatter(y=rec_tot,x=recuperado,mode='lines',name='Recuperados Totales por dia'))
fig_8.show()

fig_9=go.Figure()
fig_9.add_trace(go.Scatter(y=dead_tot,x=muerto,mode='lines',name='Fallecidos Totales por dia'))
fig_9.show()

fecha=diag.iloc[:,0]

totales=diag.iloc[:,20]
casost=diag.iloc[:,19]
diag_fecha = np.arange(0,len(diagnostico),1)

fig=plt.figure()
ax=fig.add_subplot(111,projection='3d')
ax.scatter3D(diag_fecha, casost, totales,c=casost,label='Contagios por dia y casos totales',cmap='Set1')
ax.legend()
ax.set_xlabel('Fechas')
ax.set_ylabel('Contagios')
ax.set_zlabel('Casos totales')
plt.show()

tresd=pd.DataFrame({'fecha diagnostico':diagnostico,'casos totales x dia':con_tot,'casos x dia':casos_d})
fig_10 = px.scatter_3d(tresd, x='fecha diagnostico', y='casos x dia', z='casos totales x dia', color='casos totales x dia',
                   color_continuous_scale='electric_r')
fig_10.show()

tresd1 = pd.DataFrame({'fecha recuperado':recuperado,'recuperados totales x dia':rec_tot,'recuperados x dia':casos_r})
fig_11 = px.scatter_3d(tresd1, x='fecha recuperado', y='recuperados x dia', z='recuperados totales x dia', color='recuperados totales x dia',
                   color_continuous_scale='greens')
fig_11.show()

tresd2 = pd.DataFrame({'fecha muerte':muerto,'muertes totales x dia':dead_tot,'muertes x dia':casos_m})
fig_12 = px.scatter_3d(tresd2, x='fecha muerte', y='muertes x dia', z='muertes totales x dia', color='muertes totales x dia',
                   color_continuous_scale='hot_r')
fig_12.show()

fig_13 = px.scatter_mapbox(df_result, lat='lat', lon='lon', hover_name='departamento_nom', color='casos_totales', 
                        size='casos_totales',color_continuous_scale=px.colors.sequential.Blackbody_r, zoom=3,
                        title= 'Covid-19 en Colombia')

fig_13.update_layout(
    mapbox_style="white-bg",
    mapbox_layers=[
        {
            "below": 'traces',
            "sourcetype": "raster",
            "source": [
                "https://basemap.nationalmap.gov/arcgis/rest/services/USGSImageryOnly/MapServer/tile/{z}/{y}/{x}"
            ]
        }
      ])

fig_13.show()

for i in anastasio: 
    newde=depart[corte]
    newfe=diagnostico[corte]
    anit=anit+b[i]
    an_tot.insert(i,anit)
    deparn.insert(i,newde)
    fechasan.insert(i,newfe)
    j+=1
    
    if j==lendep[corte]:
        anit=0
        corte+=1
        j=0
        if corte>34:
            corte=0
        
newfe=anim.index.values

m_3 = folium.Map(location=[4,-72], tiles='stamenterrain', zoom_start=4.5)
mc = MarkerCluster()
for idx, row in df_result.iterrows():
    if not math.isnan(row['lon']) and not math.isnan(row['lat']):
        mc.add_child(Marker([row['lat'], row['lon']]))
m_3.add_child(mc)
m_3

m_5 = folium.Map(location=[4,-72], tiles='stamenterrain', zoom_start=5.5)
HeatMap(data=df_result[['lat', 'lon']], radius=25).add_to(m_5)
m_5

#############################DIEGO###############################################


limitebog = 150000
params = params={
        'resource_id': 'b64ba3c4-9e41-41b8-b3fd-2da21d627558', 
        'limit': limitebog,
    }
url = 'https://datosabiertos.bogota.gov.co/api/3/action/datastore_search'

r = requests.get(url, params=params).json()

datbog = pd.DataFrame(r['result']['records'])
datbog['casos'] = 1

datbog.to_excel("databogota.xlsx",sheet_name="datos")


fig_14=px.pie(datbog,values='casos', names='LOCALIDAD_ASIS', title='Casos por localidad en Bogotá D.C.')
fig_14.show()


casosd=datbog.iloc[:,11]
esta2=datbog.iloc[:,9]

donut=pd.DataFrame({'Casos':casosd,'ESTADO':esta2})

fig_15=px.pie(donut,values='Casos', names='ESTADO', hole=.4,title='Estado de los Contagiados en Bogotá')
fig_15.show()


#Casos por localidad y sexo



#Ubicacion de los contagiados
ubi=datbog.iloc[:,7] 
donutcho=pd.DataFrame({'Ubicacion':ubi,'Casos':casosd})
donutcho['Ubicacion'].replace({'Casa':'Casa','Fallecido No aplica No causa Directa':'Fallecido'},inplace=True)
fig_17=px.pie(donutcho,values='Casos', names='Ubicacion',hole=.4 ,title='Ubicacion de los Contagiados')
fig_17.show()


tobog=datbog.groupby('LOCALIDAD_ASIS').count()
local=tobog.index.values
local2=local.tolist()
casosbo=tobog.iloc[:,0]
casosbo2=casosbo.tolist()

casbo=pd.DataFrame({'Localidad':local,'Casos':casosbo2})

casbo['Lon']=casbo['Localidad']
casbo['Lon'].replace({'Barrios Unidos':-74.084,'Engativá':-74.107,'Sumapaz':-74.315,'Teusaquillo':-74.094,
                      'La Candelaria':-74.074,'Santa Fe':-74.030,'Suba':-74.082,'Fontibón':-74.148,'Los Mártires':-74.091,
                      'San Cristóbal':-74.088,'Usme':-74.103,'Puente Aranda':-74.123,'Usaquén':-74.031,
                      'Fuera de Bogotá':-74.082,'Bosa':-74.192,'Ciudad Bolívar':-74.154,'Rafael Uribe Uribe':-74.116,
                      'Kennedy':-74.157,'Chapinero':-74.047,'Tunjuelito':-74.141,'Antonio Nariño':-74.101,
                      'Sin dato':-74.152053},inplace=True)

casbo['Lat']=casbo['Localidad']
casbo['Lat'].replace({'Barrios Unidos':4.666,'Engativá':4.707,'Sumapaz':4.035,'Teusaquillo':4.645,'La Candelaria':4.594,
                      'Santa Fe':4.596,'Suba':4.765,'Fontibón':4.683,'Los Mártires':4.603,'San Cristóbal':4.546,
                      'Usme':4.477,'Puente Aranda':4.615,'Usaquén':4.749,'Fuera de Bogotá':4.610,'Bosa':4.631,
                      'Ciudad Bolívar':4.507,'Rafael Uribe Uribe':4.565,'Kennedy':4.627,'Chapinero':4.657,
                      'Tunjuelito':4.588,'Antonio Nariño':4.549,'Sin dato':4.653376},inplace=True)
        
fig_18 = px.scatter_mapbox(casbo, lat='Lat', lon='Lon', hover_name='Localidad', color='Casos', 
                        size='Casos',color_continuous_scale='cividis', zoom=9,
                        title= 'Covid-19 en Bogota')

fig_18.update_layout(mapbox_style="open-street-map")
fig_18.show()


external_stylesheets=['https://codepen.io/chriddyp/pen/bWLwgP.css%27']
app = dash.Dash(__name__, external_stylesheets=external_stylesheets)

colors = {
    'background': '#000000',
    'text': '#fdf3fa'
}

app.layout = html.Div(
    html.Div([
         html.H1(children='Data viewer: Seguimineto del covid-19 en Colombia',
                 style={
            'textAlign' : 'center',
            'color': colors['text'],
            'background':  '#000000',

        }),
         
         html.Div(children='''
            Autores: Diego Amado, Sebastian Manjarres, Luis Velasquez.
         ''',style={
            'font': {
                    'family' : 'serif',
                    'color': colors['text']
                },
            'textAlign': 'center',
        }),
                    
         dcc.Graph(figure=fig_11), 
         dcc.Graph(figure=fig_13),  
         dcc.Graph(figure=fig_12), 
         dcc.Graph(figure=fig_14),
         dcc.Graph(figure=fig_15),
          dcc.Graph(figure=fig_2),
          dcc.Graph(figure=fig_1),
          dcc.Graph(figure=fig_3),
          dcc.Graph(figure=fig_4),
          dcc.Graph(figure=fig_6),
          dcc.Graph(figure=fig_7),
          dcc.Graph(figure=fig_9),
          dcc.Graph(figure=fig_10),
          dcc.Graph(figure=fig_17),
          dcc.Graph(figure=fig_18),
     ])            
  )


if __name__ == '__main__':
    app.run_server(debug=True, use_reloader=False)
